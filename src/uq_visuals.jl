using CairoMakie

"""
plot_mcmc_densities!(chain_X; n_columns=3)

Plots marginal density distributions for each parameter in the 
constituent parameter vectors of `chain_X`, each representing a sample
generated by MCMC.
"""
function plot_mcmc_densities!(fig, axes, chain_X, parameter_names; 
                                n_columns = 3,
                                directory = pwd(),
                                filename = "mcmc_densities.png",
                                label = false,
                                color = (:blue, 0.5))

    for (i, param_name) in enumerate(parameter_names)
        samples = getindex.(chain_X, i)

        ax = axes[i+1]
        # density!(ax, samples; color, label)
        hist!(ax, samples; label, bins = 30, normalization = :png)
    end

    fig[1,1] = Legend(fig, axes[end], "Sampled Objective"; framevisible=true, 
                                                            tellheight = false,
                                                            tellwidth = false)
    save(joinpath(directory, filename), fig)
end

function plot_mcmc_densities(chain_X, parameter_names; 
                                n_columns = 3, kwargs...)
    
    N_axes = length(first(chain_X)) + 1
    n_rows = Int(ceil(N_axes / n_columns))
                            
    fig = Figure(resolution = (500n_columns, 200n_rows))

    ax_coords = [(i, j) for i = 1:n_rows, j = 1:n_columns]

    # Reserve position [1,1] for the legend
    ax1 = Axis(fig[1,1])
    hidedecorations!(ax1)
    hidespines!(ax1)
    axes = [ax1]
    for (i, param_name) in enumerate(parameter_names)
        coords = ax_coords[i+1]
        ax = Axis(fig[coords...],
            xlabel = string(param_name),
            ylabel = "Density")
        ax.xlabelsize = 20
        push!(axes, ax)
    end

    plot_mcmc_densities!(fig, axes, chain_X, parameter_names; n_columns, kwargs...)

    return fig, axes
end